============================= test session starts ==============================
platform darwin -- Python 3.9.6, pytest-6.2.5, py-1.11.0, pluggy-1.0.0 -- /Users/igorpotemkin/PycharmProjects/Module_3/coursework3/venv/bin/python
cachedir: .pytest_cache
rootdir: /Users/igorpotemkin/PycharmProjects/Module_3/coursework3/tests
plugins: anyio-3.4.0, cov-3.0.0
collecting ... collected 1 item

test_service/test_favorites.py::TestFavoriteMovieService::test_get_one_with_mock 2021-12-09 19:55:44,625 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2021-12-09 19:55:44,625 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("favorite_movie")
2021-12-09 19:55:44,626 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,626 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("favorite_movie")
2021-12-09 19:55:44,626 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,627 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("director")
2021-12-09 19:55:44,627 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,628 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("director")
2021-12-09 19:55:44,628 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,628 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("genre")
2021-12-09 19:55:44,628 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,629 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("genre")
2021-12-09 19:55:44,629 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,629 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("movie")
2021-12-09 19:55:44,629 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,629 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("movie")
2021-12-09 19:55:44,629 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,630 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("favorite_movie")
2021-12-09 19:55:44,630 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,630 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("favorite_movie")
2021-12-09 19:55:44,630 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,630 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("director")
2021-12-09 19:55:44,630 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,630 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("director")
2021-12-09 19:55:44,631 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,631 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("genre")
2021-12-09 19:55:44,631 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,631 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("genre")
2021-12-09 19:55:44,631 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,631 INFO sqlalchemy.engine.Engine PRAGMA main.table_info("movie")
2021-12-09 19:55:44,632 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,632 INFO sqlalchemy.engine.Engine PRAGMA temp.table_info("movie")
2021-12-09 19:55:44,632 INFO sqlalchemy.engine.Engine [raw sql] ()
2021-12-09 19:55:44,632 INFO sqlalchemy.engine.Engine ROLLBACK
ERROR

==================================== ERRORS ====================================
______ ERROR at setup of TestFavoriteMovieService.test_get_one_with_mock _______

self = <tests.test_service.test_favorites.TestFavoriteMovieService object at 0x108f21d90>

    @pytest.fixture(scope='session')
    def db_migration(self):
        with self.engine.begin() as conn:
            Base.metadata.drop_all(conn)
>           Base.metadata.create_all(conn)

test_service/test_favorites.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../venv/lib/python3.9/site-packages/sqlalchemy/sql/schema.py:4785: in create_all
    bind._run_ddl_visitor(
../venv/lib/python3.9/site-packages/sqlalchemy/engine/base.py:2113: in _run_ddl_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
../venv/lib/python3.9/site-packages/sqlalchemy/sql/visitors.py:524: in traverse_single
    return meth(obj, **kw)
../venv/lib/python3.9/site-packages/sqlalchemy/sql/ddl.py:822: in visit_metadata
    collection = sort_tables_and_constraints(
../venv/lib/python3.9/site-packages/sqlalchemy/sql/ddl.py:1286: in sort_tables_and_constraints
    dependent_on = fkc.referred_table
../venv/lib/python3.9/site-packages/sqlalchemy/sql/schema.py:3705: in referred_table
    return self.elements[0].column.table
../venv/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py:1113: in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = ForeignKey('user.id')

    @util.memoized_property
    def column(self):
        """Return the target :class:`_schema.Column` referenced by this
        :class:`_schema.ForeignKey`.
    
        If no target column has been established, an exception
        is raised.
    
        .. versionchanged:: 0.9.0
            Foreign key target column resolution now occurs as soon as both
            the ForeignKey object and the remote Column to which it refers
            are both associated with the same MetaData object.
    
        """
    
        if isinstance(self._colspec, util.string_types):
    
            parenttable, tablekey, colname = self._resolve_col_tokens()
    
            if tablekey not in parenttable.metadata:
>               raise exc.NoReferencedTableError(
                    "Foreign key associated with column '%s' could not find "
                    "table '%s' with which to generate a "
                    "foreign key to target column '%s'"
                    % (self.parent, tablekey, colname),
                    tablekey,
E                   sqlalchemy.exc.NoReferencedTableError: Foreign key associated with column 'favorite_movie.user_id' could not find table 'user' with which to generate a foreign key to target column 'id'

../venv/lib/python3.9/site-packages/sqlalchemy/sql/schema.py:2410: NoReferencedTableError
------------------------------ Captured log setup ------------------------------
INFO     sqlalchemy.engine.Engine:log.py:117 BEGIN (implicit)
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA main.table_info("favorite_movie")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA temp.table_info("favorite_movie")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA main.table_info("director")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA temp.table_info("director")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA main.table_info("genre")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA temp.table_info("genre")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA main.table_info("movie")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA temp.table_info("movie")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA main.table_info("favorite_movie")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA temp.table_info("favorite_movie")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA main.table_info("director")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA temp.table_info("director")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA main.table_info("genre")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA temp.table_info("genre")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA main.table_info("movie")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 PRAGMA temp.table_info("movie")
INFO     sqlalchemy.engine.Engine:log.py:117 [raw sql] ()
INFO     sqlalchemy.engine.Engine:log.py:117 ROLLBACK
=========================== short test summary info ============================
ERROR test_service/test_favorites.py::TestFavoriteMovieService::test_get_one_with_mock
=============================== 1 error in 0.68s ===============================
